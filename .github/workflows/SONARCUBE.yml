name: SonarQube Analysis

on:
  push:
    branches:
      - main # Ejecuta el análisis solo cuando haya cambios en la rama main
  pull_request:
    branches:
      - main # Ejecuta el análisis en los Pull Requests hacia main

jobs:
  sonarQubeAnalysis:
    name: SonarQube Analysis Job
    runs-on: ubuntu-latest # Ejecutar el pipeline en un runner Ubuntu

    steps:
      # 1. Checkout del repositorio
      - name: Check out repository
        uses: actions/checkout@v2

      # 2. Configurar Java (SonarQube necesita Java para ejecutarse)
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # Java OpenJDK
          java-version: '11' # SonarQube requiere Java 11 o superior

      # 3. Configurar el token de SonarQube
      - name: Configure SonarQube token
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Configura tu token como un secreto en el repositorio

      # 4. Ejecutar SonarQube Scanner
      - name: Run SonarQube Scanner
        run: |
          # Descargar y configurar el Sonar Scanner
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip -d $HOME
          export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"

          # Ejecutar el análisis
          sonar-scanner \
            -Dsonar.projectKey=guiss0_java-reachability-playground \
            -Dsonar.login=$SONAR_TOKEN
